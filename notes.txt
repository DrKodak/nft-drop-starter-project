https://github.com/buildspace/buildspace-projects/tree/main/Solana_NFTs/en

Notes:

Solana name service resolves a crypto address to a twitter handle

the candy machine is configured through the config.json file at the root. https://docs.metaplex.com/candy-machine-v2/configuration 
    end-settings: amount will stop after a certain amount are minted. date is for a certain amount of time
    https://docs.metaplex.com/candy-machine-v2/update to update the machine after swapping settings
    gatekeeper: is there to force a captcha to help reduce bots. Should test this. 


Javascript notes:
the keyword async before a function makes the function return a promise

Section 2:

things never worked but I turned on the vpn and now the metaplex command worked. not sure why but I finally got a success
upload command - ts-node ~/metaplex/js/packages/cli/src/candy-machine-v2-cli.ts upload -e devnet -k ~/.config/solana/devnet.json -cp config.json ./assets

after success, "config for a candy machine with publickey: 3HRJzumroKP9QtwTY2FvR5JA9Lm93NxXfFac9NLwKzdr has been already initialized"
I'm not sure why it's already been initialized. It must have gotten somewhere once but failed at some random step.

After this step, if I update any of the nfts and run upload, it won't update because of .cache. I'll need to delete the .cache folder and run the upload command again. This will force the initialization of a new candy machine config. 

then I run the verify command - "ts-node ~/metaplex/js/packages/cli/src/candy-machine-v2-cli.ts verify_upload -e devnet -k ~/.config/solana/devnet.json"
it is successful

to update the candy machine config, update config.json then run this update commmand - "ts-node ~/metaplex/js/packages/cli/src/candy-machine-v2-cli.ts update_candy_machine -e devnet -k ~/.config/solana/devnet.json -cp config.json"

Section 3:
when making a web app, never commit the .env file if I'm uploading it to github or something. Probably put it in the .gitignore straight away if I have the choice

    A note on changing your NFTs
    Let's say you don't like the NFT collection you used for testing and got a better idea. You need to be careful here! Whenever you change your collection, you need to follow the same steps from earlier to deploy the NFTs.

        Delete the .cache folder that was generated by the Metaplex CLI's candy machine commands.
        Change up your NFT files to be whatever you want!
        Run Metaplex's upload command via the CLI to upload the NFTs and create a new candy machine.
        Run Metaplex's verify command via the CLI to make sure the NFTs were uploaded and the candy machine was properly configured.
        Update your .env file with the new address.

    If you mess up even one of these steps, everything will break. So, watch out.
Provider objects are how the web app talks to the solana blockchain. It gives our client a connection to Solana and our wallet credential sso we can talk to programs on Solana

The candy machine is effectively just a solana program that our web app can interact with. So to make rug pull, I just need to make a solana program that's sort of based off of the candy machine